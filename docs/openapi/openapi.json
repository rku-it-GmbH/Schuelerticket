{
	"openapi": "3.0.1",
	"info": {
		"title": "Schülerticket API",
		"description": "Schülerticket Schnittstelle zwischen Schulträger und VU in NRW",
		"contact": {
			"name": "Lukas Sauerbier - rku.it GmbH",
			"url": "https://github.com/rku-it-GmbH/Schuelerticket",
			"email": "lukas.sauerbier@rku-it.de",
			"x-Company": "rku.it GmbH",
			"x-Company-URL": "https://rku-it.de"
		},
		"license": {
			"name": "MIT License",
			"url": "https://github.com/rku-it-GmbH/Schuelerticket/blob/main/LICENSE"
		},
		"version": "v0.7.3"
	},
	"servers": [
		{
			"url": "https://localhost:8080/studentticketapi",
			"description": "localhost"
		}
	],
	"tags": [
		{
			"name": "School Data API"
		}
	],
	"paths": {
		"/api/sendRequest": {
			"post": {
				"tags": [
					"School Data API"
				],
				"summary": "Übertragen eines Datensatzes an das Verkehrsunternehmen",
				"operationId": "api",
				"parameters": [
					{
						"name": "X-API-KEY",
						"in": "header",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Request"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/Request"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK!",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProcessedRequest"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/ProcessedRequest"
								}
							}
						}
					},
					"400": {
						"description": "Fehler bei der Validierung der Anfrage",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProcessedRequest"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/ProcessedRequest"
								}
							}
						}
					},
					"401": {
						"description": "API Key leer oder nicht angegeben",
						"content": {
							"text/plain": {}
						}
					},
					"403": {
						"description": "API Key nicht gefunden",
						"content": {
							"text/plain": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"text/plain": {}
						}
					},
					"406": {
						"description": "Accept-Header kann nicht erfüllt werden",
						"content": {
							"text/plain": {}
						}
					},
					"415": {
						"description": "Content-Type wird nicht unterstützt",
						"content": {
							"text/plain": {}
						}
					},
					"500": {
						"description": "Interner Serverfehler",
						"content": {
							"text/plain": {}
						}
					},
					"502": {
						"description": "Bad Gateway",
						"content": {
							"text/plain": {}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"text/plain": {}
						}
					},
					"504": {
						"description": "Gateway Timeout",
						"content": {
							"text/plain": {}
						}
					}
				}
			}
		},
		"/api/stoplist": {
			"get": {
				"tags": [
					"School Data API"
				],
				"summary": "Liefert die Liste aller Haltestellen",
				"operationId": "getStopList",
				"parameters": [
					{
						"name": "X-API-KEY",
						"in": "header",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK!",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Stop"
									}
								}
							},
							"application/xml": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Stop"
									}
								}
							}
						}
					},
					"400": {
						"description": "Fehler bei der Validierung der Anfrage",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Stop"
									}
								}
							},
							"application/xml": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Stop"
									}
								}
							}
						}
					},
					"401": {
						"description": "API Key leer oder nicht angegeben",
						"content": {
							"text/plain": {}
						}
					},
					"403": {
						"description": "API Key nicht gefunden",
						"content": {
							"text/plain": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"text/plain": {}
						}
					},
					"406": {
						"description": "Accept-Header kann nicht erfüllt werden",
						"content": {
							"text/plain": {}
						}
					},
					"415": {
						"description": "Content-Type wird nicht unterstützt",
						"content": {
							"text/plain": {}
						}
					},
					"500": {
						"description": "Interner Serverfehler",
						"content": {
							"text/plain": {}
						}
					},
					"502": {
						"description": "Bad Gateway",
						"content": {
							"text/plain": {}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"text/plain": {}
						}
					},
					"504": {
						"description": "Gateway Timeout",
						"content": {
							"text/plain": {}
						}
					}
				}
			}
		},
		"/api/processed": {
			"get": {
				"tags": [
					"School Data API"
				],
				"summary": "Liefert die bearbeiteten Anträge des Zeitraums",
				"operationId": "getProcessedRequests",
				"parameters": [
					{
						"name": "X-API-KEY",
						"in": "header",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "from",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK!",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ProcessedRequest"
									}
								}
							},
							"application/xml": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ProcessedRequest"
									}
								}
							}
						}
					},
					"400": {
						"description": "Fehler bei der Validierung der Anfrage",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ProcessedRequest"
									}
								}
							},
							"application/xml": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ProcessedRequest"
									}
								}
							}
						}
					},
					"401": {
						"description": "API Key leer oder nicht angegeben",
						"content": {
							"text/plain": {}
						}
					},
					"403": {
						"description": "API Key nicht gefunden",
						"content": {
							"text/plain": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"text/plain": {}
						}
					},
					"406": {
						"description": "Accept-Header kann nicht erfüllt werden",
						"content": {
							"text/plain": {}
						}
					},
					"415": {
						"description": "Content-Type wird nicht unterstützt",
						"content": {
							"text/plain": {}
						}
					},
					"500": {
						"description": "Interner Serverfehler",
						"content": {
							"text/plain": {}
						}
					},
					"502": {
						"description": "Bad Gateway",
						"content": {
							"text/plain": {}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"text/plain": {}
						}
					},
					"504": {
						"description": "Gateway Timeout",
						"content": {
							"text/plain": {}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"BasicData": {
				"required": [
					"personalContribution",
					"reductionEntitled",
					"requestDate",
					"requestID"
				],
				"type": "object",
				"properties": {
					"requestDate": {
						"type": "string",
						"description": "Antragsdatum",
						"format": "date",
						"example": "2022-07-21"
					},
					"approvalDate": {
						"type": "string",
						"description": "Genehmigungssdatum",
						"format": "date",
						"example": "2022-07-21"
					},
					"applicant": {
						"type": "string",
						"description": "Schulamt Gelsenkirchen",
						"example": "Antragssteller Stadt/Amt/Schule"
					},
					"requestID": {
						"type": "string",
						"description": "Antragsnummer aus dem Schulträgersystem",
						"example": "123456A9"
					},
					"reductionEntitled": {
						"type": "boolean",
						"description": "Besteht ein Anspruch auf Ermäßigung",
						"example": true
					},
					"personalContribution": {
						"type": "string",
						"description": "Eigenanteil",
						"example": "High",
						"enum": [
							"Full",
							"High",
							"Low",
							"None"
						]
					},
					"note": {
						"type": "string",
						"description": "Notiz des Schulträgers an das Verkehrsunternehmen",
						"example": "Bitte erneut prüfen"
					},
					"requestType": {
						"type": "string",
						"enum": [
							"Initial",
							"Followup",
							"Change_Payment",
							"Change_Adress",
							"Change_School",
							"Cancel",
							"Other"
						]
					}
				},
				"description": "Basisdaten zum Antrag - In diesem Element werden alle Basisdaten des Antrages übergeben, z.B. der gewünschte Gültigkeitsbeginn des Tickets."
			},
			"Consent": {
				"required": [
					"contactViaEMail",
					"contactViaMail",
					"contactViaPhone",
					"marketResearch",
					"marketing",
					"privacyPolicy"
				],
				"type": "object",
				"properties": {
					"privacyPolicy": {
						"type": "boolean",
						"description": "Zustimmung zur Datenschutzerklärung",
						"example": true
					},
					"marketing": {
						"type": "boolean",
						"description": "Zustimmung Marketing/Werbung",
						"example": true
					},
					"marketResearch": {
						"type": "boolean",
						"description": "Zustimmung zu Markt- und Meinungsforschung ",
						"example": true
					},
					"contactViaPhone": {
						"type": "boolean",
						"description": "Zustimmung Kontaktierung per Telefon",
						"example": true
					},
					"contactViaMail": {
						"type": "boolean",
						"description": "Zustimmung Kontaktierung per Post",
						"example": true
					},
					"contactViaEMail": {
						"type": "boolean",
						"description": "Zustimmung Kontaktierung per E-Mail",
						"example": true
					}
				},
				"description": "Zustimmungen einer Person."
			},
			"Contact": {
				"required": [
					"firstname",
					"lastname",
					"sex"
				],
				"type": "object",
				"properties": {
					"lastname": {
						"type": "string",
						"description": "Nachname",
						"example": "Müller"
					},
					"studentID": {
						"type": "string",
						"description": "ID im Schulsystem",
						"example": "12345A99"
					},
					"firstname": {
						"type": "string",
						"description": "Vorname",
						"example": "Marie"
					},
					"customerNumber": {
						"type": "string",
						"description": "Kundennummer der Person beim Verkehrsunternehmen",
						"example": "1233738B2"
					},
					"contractNumber": {
						"type": "string",
						"description": "Vertragsnummer der Person beim Verkehrsunternehmen",
						"example": "1233738B2"
					},
					"subscriptionNumber": {
						"type": "string",
						"description": "Abonummer der Person beim Verkehrsunternehmen",
						"example": "1233738B2"
					},
					"birthday": {
						"type": "string",
						"description": "Geburtsdatum",
						"format": "date",
						"example": "2017-07-21"
					},
					"sex": {
						"type": "string",
						"description": "Geschlecht",
						"example": "male",
						"enum": [
							"unknown",
							"male",
							"female",
							"divers",
							"not_specified"
						]
					},
					"street": {
						"type": "string",
						"description": "Straße",
						"example": "Cloudstraße"
					},
					"streetnumber": {
						"maxLength": 9,
						"type": "string",
						"description": "Hausnummer",
						"example": "22"
					},
					"streetnumberExtension": {
						"type": "string",
						"description": "Hausnummer Zusatz",
						"example": "A"
					},
					"adressExtension": {
						"type": "string",
						"description": "Adresszusatz",
						"example": "Hinterhaus"
					},
					"pobox": {
						"type": "string",
						"description": "Postfach",
						"example": "12 34 56"
					},
					"postalcode": {
						"type": "string",
						"description": "PLZ - Postleitzahl",
						"example": "44141"
					},
					"city": {
						"type": "string",
						"description": "Ort - Wohnort",
						"example": "Dortmund"
					},
					"district": {
						"type": "string",
						"description": "Ortsteil bei ausländischem Wohnort",
						"example": "Lütgendortmund"
					},
					"country": {
						"type": "string",
						"description": "Land bei ausländischem Wohnort",
						"example": "Deutschland"
					},
					"phonenumber": {
						"type": "string",
						"description": "Telefonnummer",
						"example": "0123456789"
					},
					"emailAdress": {
						"type": "string"
					}
				},
				"description": "Kontaktdaten einer Person."
			},
			"PaymentDetails": {
				"required": [
					"creditCheckConsent",
					"directDebitConsent",
					"payment"
				],
				"type": "object",
				"properties": {
					"bankName": {
						"maxLength": 64,
						"minLength": 0,
						"type": "string",
						"description": "Name der Bank, nur optionale Angabe zur Kontrolle",
						"example": "Sparkasse Herne"
					},
					"iban": {
						"maxLength": 34,
						"minLength": 15,
						"type": "string",
						"description": "IBAN",
						"example": "DEABCDEF123456789"
					},
					"bic": {
						"maxLength": 20,
						"minLength": 0,
						"type": "string",
						"description": "BIC",
						"example": "WELADED2HER"
					},
					"payer": {
						"$ref": "#/components/schemas/Contact"
					},
					"directDebitConsent": {
						"type": "boolean",
						"description": "Zustimmung SEPA Lastschrift",
						"example": true
					},
					"creditCheckConsent": {
						"type": "boolean",
						"description": "Zustimmung Bonitätsprüfung",
						"example": true
					},
					"payment": {
						"type": "string",
						"description": "Art der Zahlung",
						"example": "Invoice",
						"enum": [
							"Invoice",
							"DirectDebit"
						]
					}
				},
				"description": "Informationen zur Zahlung des Eigenalteils"
			},
			"Request": {
				"required": [
					"basicData",
					"consent",
					"student",
					"ticketInformation"
				],
				"type": "object",
				"properties": {
					"basicData": {
						"$ref": "#/components/schemas/BasicData"
					},
					"ticketInformation": {
						"$ref": "#/components/schemas/TicketInformation"
					},
					"student": {
						"$ref": "#/components/schemas/Contact"
					},
					"representative": {
						"$ref": "#/components/schemas/Contact"
					},
					"paymentDetails": {
						"$ref": "#/components/schemas/PaymentDetails"
					},
					"consent": {
						"$ref": "#/components/schemas/Consent"
					},
					"schoolInformation": {
						"$ref": "#/components/schemas/SchoolInformation"
					},
					"siblings": {
						"type": "array",
						"description": "Angaben von Geschwisterkindern zur Festlegung des Eigenanteils. Dieser Datensatz entfällt, wenn keine Geschwisterbeziehungen angegeben wurden. Dann wird ein leeres Array erwartet.",
						"items": {
							"$ref": "#/components/schemas/Sibling"
						}
					}
				}
			},
			"School": {
				"required": [
					"id",
					"name",
					"schoolType"
				],
				"type": "object",
				"properties": {
					"id": {
						"maximum": 999999999,
						"maxLength": 10,
						"type": "integer",
						"description": "Soweit bekannt, eindeutige ID der Schule",
						"format": "int64",
						"example": 61854
					},
					"name": {
						"maxLength": 250,
						"minLength": 0,
						"type": "string",
						"description": "Name der Schule",
						"example": "ABC Grundschule"
					},
					"schoolType": {
						"type": "string",
						"description": "Schultyp",
						"example": "Grundschule",
						"enum": [
							"Grundschule",
							"Gymnasium",
							"Realschule",
							"Gesamtschule",
							"Hauptschule",
							"Berufsschule",
							"Mittelschule",
							"Sekundarschule",
							"Foerderschule",
							"Wirtschaftsschule",
							"Berufsfachschule",
							"Berufsoberschule",
							"Fachoberschule",
							"Fachschule",
							"Gemeinschaftsschule",
							"Berufliches_Gymnasium",
							"Berufskolleg",
							"Oberstufenkolleg",
							"Weiterbildungskolleg",
							"Ersatzschule",
							"Unknown"
						]
					}
				}
			},
			"SchoolInformation": {
				"required": [
					"school",
					"schoolCertificateChecked"
				],
				"type": "object",
				"properties": {
					"oldSchool": {
						"$ref": "#/components/schemas/School"
					},
					"school": {
						"$ref": "#/components/schemas/School"
					},
					"classNumber": {
						"type": "string",
						"description": "Klasse/Jahrgangsstufe",
						"example": "6A"
					},
					"courseOfEducation": {
						"type": "string",
						"description": "Bildungsgang",
						"example": "Ausbildungsklasse Elektrotechnik"
					},
					"schoolCertificateChecked": {
						"type": "boolean",
						"description": "Schulbescheinigung",
						"example": true
					}
				},
				"description": "In diesem Element werden die Daten zur aufnehmenden und ggf. zur alten Schule überge-ben"
			},
			"Sibling": {
				"required": [
					"customer",
					"school"
				],
				"type": "object",
				"properties": {
					"customer": {
						"$ref": "#/components/schemas/Contact"
					},
					"school": {
						"$ref": "#/components/schemas/School"
					}
				},
				"description": "Angaben von Geschwisterkindern zur Festlegung des Eigenanteils. Dieser Datensatz entfällt, wenn keine Geschwisterbeziehungen angegeben wurden. Dann wird ein leeres Array erwartet."
			},
			"TicketInformation": {
				"required": [
					"acceptTransportTerms",
					"subscribtionStart",
					"trafficAssociation",
					"trafficCompany"
				],
				"type": "object",
				"properties": {
					"acceptTransportTerms": {
						"type": "boolean",
						"description": "Zustimmung Tarifgrundlagen erteilt",
						"example": true
					},
					"schoolYearStart": {
						"type": "string",
						"description": "Schuljahres-Beginn",
						"format": "date",
						"example": "2023-05-21"
					},
					"schoolYearEnd": {
						"type": "string",
						"description": "Schuljahres-Ende",
						"format": "date",
						"example": "2022-08-01"
					},
					"subscribtionStart": {
						"type": "string",
						"description": "Abo-Beginn",
						"format": "date",
						"example": "2023-05-21"
					},
					"subscribtionEnd": {
						"type": "string",
						"description": "Abo-Ende",
						"format": "date",
						"example": "2022-08-01"
					},
					"trafficAssociation": {
						"type": "string",
						"description": "Verkehrsverbund",
						"example": "AVV"
					},
					"trafficCompany": {
						"type": "string",
						"description": "Verkehrsunternehmen",
						"example": "BOGESTRA"
					},
					"product": {
						"type": "string",
						"description": "Produkt",
						"example": "Schokoticket"
					},
					"productNumber": {
						"type": "string",
						"description": "Produktnummer",
						"example": "691581"
					},
					"priceLevel": {
						"type": "string",
						"description": "Preisstufe",
						"example": "A3"
					},
					"startingStop": {
						"type": "string",
						"description": "Starthaltestelle",
						"example": "Bochum, Jahrhunderthalle"
					},
					"viaStop": {
						"type": "string",
						"description": "Über Haltestelle",
						"example": "Bochum, Jahrhunderthalle"
					},
					"destinationStop": {
						"type": "string",
						"description": "Zielhaltestelle",
						"example": "Herne, Berliner Platz"
					},
					"validityAreaSchool": {
						"type": "string",
						"description": "Geltungsbereich",
						"example": "Wabe 615"
					},
					"validityAreaPrivate": {
						"type": "string",
						"description": "Geltungsbereich beim Zukauf von Freizeitnutzung",
						"example": "Wabe 615"
					},
					"selectedMedium": {
						"type": "string",
						"description": "Typ des Nutzermediums",
						"example": "chipcard",
						"enum": [
							"chipcard",
							"app",
							"paper"
						]
					}
				},
				"description": "Informationen zum Ticket"
			},
			"ProcessedRequest": {
				"required": [
					"requestID",
					"status"
				],
				"type": "object",
				"properties": {
					"requestID": {
						"type": "string",
						"description": "Antragsnummer aus dem Schulträgersystem",
						"example": "123456A9"
					},
					"calculatedProduct": {
						"type": "string",
						"description": "Ermitteltes Produkt",
						"example": "Schokoticket"
					},
					"calculatedProductNumber": {
						"type": "string",
						"description": "Ermittelte Produktnummer",
						"example": "619A1"
					},
					"calculatedPrice": {
						"type": "number",
						"description": "Ermittelter Preis",
						"format": "float",
						"example": 15.9
					},
					"customerNumber": {
						"type": "string",
						"description": "Kundennummer der Person beim Verkehrsunternehmen",
						"example": "1233738B2"
					},
					"contractNumber": {
						"type": "string",
						"description": "Vertragsnummer der Person beim Verkehrsunternehmen",
						"example": "1233738B2"
					},
					"subscriptionNumber": {
						"type": "string",
						"description": "Abonummer der Person beim Verkehrsunternehmen",
						"example": "1233738B2"
					},
					"status": {
						"type": "string",
						"description": "Status des Antrags",
						"example": "approved",
						"enum": [
							"unprocessed",
							"error",
							"approved",
							"denied",
							"needs_revision",
							"other"
						]
					},
					"info": {
						"type": "string",
						"description": "Begründung zum Status",
						"example": "Adresse des Kindes ist nicht bekannt"
					},
					"errors": {
						"type": "object",
						"additionalProperties": {
							"type": "string",
							"description": "Fehlercodes mit Beschreibung"
						},
						"description": "Fehlercodes mit Beschreibung"
					}
				}
			},
			"Stop": {
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Eindeutige ID der Haltestelle",
						"example": "DE:45138:85613"
					},
					"name": {
						"type": "string",
						"description": "Name der Haltestelle",
						"example": "Herne, Sparkasse"
					}
				}
			}
		}
	}
}